// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using anonymous_forum_csharp.Data;

#nullable disable

namespace anonymous_forum_csharp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230911123501_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("anonymous_forum_csharp.Models.CommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IpAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IpAdress = "::1",
                            PostId = 1,
                            Text = "First (comment)!"
                        },
                        new
                        {
                            Id = 2,
                            IpAdress = "::1",
                            PostId = 2,
                            Text = "Rickard was here"
                        });
                });

            modelBuilder.Entity("anonymous_forum_csharp.Models.PostModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IpAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IpAdress = "::1",
                            Text = "1. Be respectful to others. 2. No spamming. 3. No NSFW content. 4. No advertising. 5. No illegal content.",
                            Title = "Forum rules",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 2,
                            IpAdress = "::1",
                            Text = "On 24 February 2022, Russia invaded Ukraine in an escalation of the Russo-Ukrainian War which began in 2014.",
                            Title = "Ukraine war",
                            TopicId = 2
                        },
                        new
                        {
                            Id = 3,
                            IpAdress = "::1",
                            Text = "Before you start, make sure you find a safe place to park. It’s better to drive further and risk damaging the wheel rim than stop somewhere dangerous – such as on a narrow road.",
                            Title = "How to change a tire",
                            TopicId = 3
                        },
                        new
                        {
                            Id = 4,
                            IpAdress = "::1",
                            Text = "I would like you to add sports topic so we can discuss F1!!",
                            Title = "Add sports topic",
                            TopicId = 4
                        },
                        new
                        {
                            Id = 5,
                            IpAdress = "::1",
                            Text = "A lucid dream is a type of dream in which the dreamer becomes aware that they are dreaming while dreaming.",
                            Title = "Lucid dreams",
                            TopicId = 5
                        });
                });

            modelBuilder.Entity("anonymous_forum_csharp.Models.TopicModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "General discussion",
                            Name = "General"
                        },
                        new
                        {
                            Id = 2,
                            Description = "News and announcements",
                            Name = "News"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Help and support",
                            Name = "Help"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Suggestions and feedback",
                            Name = "Suggestions"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Off-topic discussion",
                            Name = "Off-Topic"
                        });
                });

            modelBuilder.Entity("anonymous_forum_csharp.Models.CommentModel", b =>
                {
                    b.HasOne("anonymous_forum_csharp.Models.PostModel", "Posts")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("anonymous_forum_csharp.Models.PostModel", b =>
                {
                    b.HasOne("anonymous_forum_csharp.Models.TopicModel", "Topics")
                        .WithMany("Posts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("anonymous_forum_csharp.Models.PostModel", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("anonymous_forum_csharp.Models.TopicModel", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
